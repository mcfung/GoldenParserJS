// Generated by CoffeeScript 1.7.1
(function() {
  var TopicListParser, cheerio;

  cheerio = require("cheerio");

  TopicListParser = (function() {
    function TopicListParser() {}

    TopicListParser.prototype.parse = function(responseBody, onCompleteCallback) {
      var $, result, topicDoms;
      $ = cheerio.load(responseBody);
      topicDoms = $('.topic');
      result = {
        isNextPageAvailable: $('.ui-block-c>a').text().trim() !== '',
        isPreviousPageAvailable: $('.ui-block-a>a').text().trim() !== '',
        totalNumberOfPage: +$('.pageno').text().substring($('.pageno').text().lastIndexOf(' ')),
        topics: []
      };
      topicDoms.each(function() {
        var authorAndRating, getAuthorAndRating, getMessageId, getNumberOfReplies, getTitle, getTotalNumberOfPage, messageId, numberOfReplies, title, totalNumberOfPage;
        getAuthorAndRating = function(ele) {
          var author, authorDom, rating;
          authorDom = $('.topic-name', ele);
          author = authorDom.text().trim();
          rating = +$('.topic-count-like', ele).text() - $('.topic-count-dislike', ele).text();
          return {
            author: author,
            rating: rating
          };
        };
        getTitle = function(ele) {
          var titleDom;
          titleDom = $('.topic-title', ele);
          return titleDom.text().trim();
        };
        getMessageId = function(ele) {
          var href, link;
          link = $('a', ele);
          href = link.attr('href');
          return href.substring(href.indexOf("=") + 1, href.lastIndexOf("&"));
        };
        getTotalNumberOfPage = function(ele) {
          return $('.topic-page', ele).attr('totalpage');
        };
        getNumberOfReplies = function(ele) {
          var numberOfReplies;
          numberOfReplies = $('.topic-count-comment', ele);
          return numberOfReplies = parseInt(numberOfReplies.text().trim());
        };
        authorAndRating = getAuthorAndRating(this);
        title = getTitle(this);
        messageId = getMessageId(this);
        totalNumberOfPage = getTotalNumberOfPage(this);
        numberOfReplies = getNumberOfReplies(this);
        return result.topics.push({
          author: authorAndRating.author,
          rating: authorAndRating.rating,
          title: title,
          messageId: messageId,
          totalNumberOfPage: totalNumberOfPage,
          numberOfReplies: numberOfReplies
        });
      });
      return onCompleteCallback(result);
    };

    return TopicListParser;

  })();

  module.exports = TopicListParser;

}).call(this);

//# sourceMappingURL=TopicListParser.map
