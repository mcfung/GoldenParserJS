// Generated by CoffeeScript 1.7.1
(function() {
  var ThreadParser, cheerio, getImageSourceFromAlt;

  cheerio = require("cheerio");

  getImageSourceFromAlt = require('../../utils/helper').getImageSourceFromAlt;

  ThreadParser = (function() {
    function ThreadParser(preprocessors) {
      this.preprocessors = preprocessors;
    }

    ThreadParser.prototype.parse = function(responseBody, onCompleteCallback) {
      var $, preprocessors, replies, result;
      $ = cheerio.load(responseBody);
      preprocessors = this.preprocessors;
      result = {
        isNextPageAvailable: $('.View_PageSelectRight').text().trim() !== '',
        isPreviousPageAvailable: $('.View_PageSelectLeft').text().trim() !== '',
        totalNumberOfPage: $('option', $('select.View_PageSelect').get(0)).length - 2,
        title: $('.ViewTitle').text().trim(),
        replies: []
      };
      replies = $('.ReplyBox');
      replies.each(function() {
        var author, authorDom, contentDom, contentPreprocessor, date, gender, getReplyIdFromDom, images, replyId, _i, _len;
        getReplyIdFromDom = function() {
          var quoteLink, quoteLinkPattern, rid;
          quoteLink = $('.ViewAuthorPanel a', this).attr('href');
          quoteLinkPattern = /(rid=[0-9]*)/g;
          rid = quoteLink.match(quoteLinkPattern)[0];
          return rid.substring(rid.indexOf('=') + 1);
        };
        for (_i = 0, _len = preprocessors.length; _i < _len; _i++) {
          contentPreprocessor = preprocessors[_i];
          if (typeof contentPreprocessor === 'function') {
            contentPreprocessor(this, $);
          } else {
            if (contentPreprocessor != null) {
              if (typeof contentPreprocessor.preprocess === "function") {
                contentPreprocessor.preprocess(this, $);
              }
            }
          }
        }
        authorDom = $('.ViewNameMale, .ViewNameFemale', this);
        if (authorDom.length > 0) {
          author = authorDom.text();
          gender = $('.ViewNameMale', this).length > 0 ? "male" : "female";
          date = $('.ViewDate', this).text().trim();
          contentDom = $($(this).children('div').get(1));
          replyId = getReplyIdFromDom.call(this);
          images = [];
          $('img.Image', contentDom).each(function() {
            var $this;
            $this = $(this);
            return images.push(getImageSourceFromAlt($this));
          });
          return result.replies.push({
            author: author,
            gender: gender,
            content: contentDom.html(),
            images: images,
            date: date,
            replyId: replyId
          });
        }
      });
      return onCompleteCallback(result);
    };

    return ThreadParser;

  })();

  module.exports = ThreadParser;

}).call(this);

//# sourceMappingURL=ThreadParser.map
